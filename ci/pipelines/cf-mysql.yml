---
###################################################################
######                   Ressources Type                      #####
###################################################################
resource_types:
- name: keyval
  type: docker-image
  source:
    repository: swce/keyval-resource

- name: email
  type: docker-image
  source:
    repository: pcfseceng/email-resource  

- name: product-installed-version
  type: docker-image
  source:
    repository: jraverdyorange/concourse-director-release-check-resource    

#- name: git-jra
#  type: docker-image
#  source:
#    repository: jraverdyorange/git-resource
#
###################################################################
######                        Ressources                      #####
###################################################################
resources:

##### git
- name: cf-mysql-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-mysql-deployment.git
    branch: master

- name: cf-mysql-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-mysql-release.git
    branch: master

- name: mysql-boshrelease-ci
  type: git
  source:
    uri: https://github.com/orange-cloudfoundry/mysql-boshrelease-ci.git
    branch: master

- name: git-paas-templates-coab
  type: git
  source:
    uri: ((elpaaso-gitlab.url))
    branch: ((template-deployment-coab.branch))
    skip_ssl_verification: true
    username:     ((elpaaso-gitlab.username))
    password:     ((elpaaso-gitlab.password))

- name: git-paas-templates-ops
  type: git
  source:
    uri: ((elpaaso-gitlab.url))
    branch: ((template-deployment-ops.branch))
    skip_ssl_verification: true
    username:     ((elpaaso-gitlab.username))
    password:     ((elpaaso-gitlab.password))    

##### keyval
- name: version-release-mysql
  type: keyval

- name: bosh-version-ops
  type: keyval

##### product-installed-version
- name: prometheus-version
  type:  product-installed-version
  source:
    uri:      ((bosh-server.ip))
    id:       ((bosh-server.user))
    password: ((bosh-server.password)) 
    product:  "prometheus"

- name: shield-version
  type:  product-installed-version
  source:
    uri:      ((bosh-server.ip))
    id:       ((bosh-server.user))
    password: ((bosh-server.password)) 
    product:  "shield"

##### mail
- name: send-email
  type: email
  source:
    smtp:
      host: ((communication.mail.host))
      port: ((communication.mail.port)) # this must be a string
      anonymous: true
      skip_ssl_validation: true
    from: concourse@dbsp.dw
    to: ((communication.mail.to))

###################################################################
#####                       jobs                              #####
###################################################################
jobs:

##### job : check-version-mysql
- name: check-version-mysql
  serial: true
  plan:
    - aggregate:
      - get: cf-mysql-release
        trigger: true
      - get: cf-mysql-deployment
        trigger: true
      - get: mysql-boshrelease-ci    
 
    - task: check-version-mysql
      file: mysql-boshrelease-ci/ci/tasks/check-version-mysql.yml

      on_success:  
        put: send-email
        params:
          subject_text: "[cf-mysql-release] Concourse : New release"
          body: output/mail.body

    - put: version-release-mysql
      params: {file: version-release-mysql/keyval.properties}      

##### job : check-version-ops
- name: check-version-ops
  serial: true
  plan:
    - aggregate:
      - get: mysql-boshrelease-ci    
      - get: prometheus-version
        trigger: true
      - get: shield-version
        trigger: true
 
    - task: version-ops
      file: mysql-boshrelease-ci/ci/tasks/check-version-ops.yml

      on_success:  
        put: send-email
        params:
          subject_text: "[cf-mysql-release] Concourse : New release ops installed "
          body: output/mail.body

    - put: bosh-version-ops
      params: {file: bosh-version-ops/keyval.properties}      

##### job : make-manifest
- name: make-manifest
  plan:
    - aggregate:
      - get: cf-mysql-release
      - get: cf-mysql-deployment
      - get: mysql-boshrelease-ci        
      - get: version-release-mysql
        trigger: true
        passed: [check-version-mysql]
      - get: bosh-version-ops
        trigger: true
        passed: [check-version-ops]        

    - task: interpolate-manifest
      file: mysql-boshrelease-ci/ci/tasks/interpolate-manifest.yml
      params:
        DEPLOYMENT_NAME : ((bosh-deployment.name))
        ARBITRATOR:       ((bosh-deployment.arbitrator))
        SYSLOG:           ((bosh-deployment.syslog))
        PROMETHEUS:       ((bosh-deployment.prometheus))
        SHIELD:           ((bosh-deployment.shield))
        TYPE_OS:         "ubuntu-trusty"

##### job : deploy-new-cf-mysql
- name: deploy-new-cf-mysql
  serial: true
  plan:
    - aggregate: 
      - get: cf-mysql-release
      - get: cf-mysql-deployment
      - get: mysql-boshrelease-ci   
      - get: version-release-mysql
        trigger: true
        passed: [make-manifest]
      - get: bosh-version-ops
        trigger: true
        passed: [make-manifest]           
    
    - task: create-bosh-config
      file: mysql-boshrelease-ci/ci/tasks/create-bosh-config.yml
      params: 
        CA_CERT:  ((bosh-server.ca))
        IP:       ((bosh-server.ip))
        ALIAS:    ((bosh-server.alias)) 
        USER:     ((bosh-server.user))
        PASSWORD: ((bosh-server.password))

    - task: remove-mysql-release
      file: mysql-boshrelease-ci/ci/tasks/remove-mysql-release.yml
      params:
        ALIAS:            ((bosh-server.alias))
        DEPLOYMENT_NAME : ((bosh-deployment.name))     

    - task: deploy-new-mysql-release
      file: mysql-boshrelease-ci/ci/tasks/deploy-mysql-release.yml
      params:
        ALIAS:            ((bosh-server.alias))
        DEPLOYMENT_NAME : ((bosh-deployment.name))
        ARBITRATOR:       ((bosh-deployment.arbitrator))
        SYSLOG:           ((bosh-deployment.syslog))
        PROMETHEUS:       ((bosh-deployment.prometheus))
        SHIELD:           ((bosh-deployment.shield))
        RELEASE_NAME:     ((bosh-deployment.release-name))
        VERSION_RELEASE: "MASTER"
        TYPE_OS:         "ubuntu-trusty"

    - task: test-mariadb
      file: mysql-boshrelease-ci/ci/tasks/tests/test-mariadb.yml
      params:
        ALIAS:            ((bosh-server.alias))
        DEPLOYMENT_NAME : ((bosh-deployment.name))

    - task: test-prometheus
      file: mysql-boshrelease-ci/ci/tasks/tests/test-prometheus.yml
      params:
        ALIAS:            ((bosh-server.alias))
        DEPLOYMENT_NAME : ((bosh-deployment.name))

##### job : deploy-new-cf-mysql-xenial
- name: deploy-new-cf-mysql-xenial
  serial: true
  plan:
    - aggregate: 
      - get: cf-mysql-release
      - get: cf-mysql-deployment
      - get: mysql-boshrelease-ci   
      - get: version-release-mysql
        trigger: true
        passed: [deploy-new-cf-mysql]
      - get: bosh-version-ops
        trigger: true
        passed: [deploy-new-cf-mysql] 
    
    - task: create-bosh-config
      file: mysql-boshrelease-ci/ci/tasks/create-bosh-config.yml
      params: 
        CA_CERT:  ((bosh-server.ca))
        IP:       ((bosh-server.ip))
        ALIAS:    ((bosh-server.alias)) 
        USER:     ((bosh-server.user))
        PASSWORD: ((bosh-server.password))

    - task: remove-mysql-release
      file: mysql-boshrelease-ci/ci/tasks/remove-mysql-release.yml
      params:
        ALIAS:            ((bosh-server.alias))
        DEPLOYMENT_NAME : ((bosh-deployment.name))     

    - task: deploy-new-mysql-release
      file: mysql-boshrelease-ci/ci/tasks/deploy-mysql-release.yml
      params:
        ALIAS:            ((bosh-server.alias))
        DEPLOYMENT_NAME : ((bosh-deployment.name))
        ARBITRATOR:       ((bosh-deployment.arbitrator))
        SYSLOG:           ((bosh-deployment.syslog))
        PROMETHEUS:       ((bosh-deployment.prometheus))
        SHIELD:           ((bosh-deployment.shield))
        RELEASE_NAME:     ((bosh-deployment.release-name))
        VERSION_RELEASE: "MASTER"
        TYPE_OS:         "ubuntu-xenial"

    - task: test-mariadb
      file: mysql-boshrelease-ci/ci/tasks/tests/test-mariadb.yml
      params:
        ALIAS:            ((bosh-server.alias))
        DEPLOYMENT_NAME : ((bosh-deployment.name))

    - task: test-prometheus
      file: mysql-boshrelease-ci/ci/tasks/tests/test-prometheus.yml
      params:
        ALIAS:            ((bosh-server.alias))
        DEPLOYMENT_NAME : ((bosh-deployment.name))


##### job : deploy-upgrade-cf-mysql
- name: deploy-upgrade-cf-mysql
  serial: true
  plan:
    - aggregate:
      - get: cf-mysql-release
      - get: cf-mysql-deployment
      - get: mysql-boshrelease-ci   
      - get: version-release-mysql
        trigger: true
        passed: [deploy-new-cf-mysql-xenial]
      - get: bosh-version-ops
        trigger: true
        passed: [deploy-new-cf-mysql-xenial] 
    
    - task: create-bosh-config
      file: mysql-boshrelease-ci/ci/tasks/create-bosh-config.yml
      params: 
        CA_CERT:  ((bosh-server.ca))
        IP:       ((bosh-server.ip))
        ALIAS:    ((bosh-server.alias)) 
        USER:     ((bosh-server.user))
        PASSWORD: ((bosh-server.password))     

    - task: remove-mysql-release
      file: mysql-boshrelease-ci/ci/tasks/remove-mysql-release.yml
      params:
        ALIAS:            ((bosh-server.alias))
        DEPLOYMENT_NAME : ((bosh-deployment.name))     

    - task: deploy-previous-mysql-release
      file: mysql-boshrelease-ci/ci/tasks/deploy-mysql-release.yml
      params:
        ALIAS:            ((bosh-server.alias))
        DEPLOYMENT_NAME : ((bosh-deployment.name))
        ARBITRATOR:       ((bosh-deployment.arbitrator))
        SYSLOG:           ((bosh-deployment.syslog))
        PROMETHEUS:       ((bosh-deployment.prometheus))
        SHIELD:           ((bosh-deployment.shield))
        RELEASE_NAME:     ((bosh-deployment.release-name))
        VERSION_RELEASE: "PREVIOUS"     
        TYPE_OS:         "ubuntu-trusty"

    - task: deploy-upgrade-mysql-release
      file: mysql-boshrelease-ci/ci/tasks/deploy-mysql-release.yml
      params:
        ALIAS:            ((bosh-server.alias))
        DEPLOYMENT_NAME : ((bosh-deployment.name))
        ARBITRATOR:       ((bosh-deployment.arbitrator))
        SYSLOG:           ((bosh-deployment.syslog))
        PROMETHEUS:       ((bosh-deployment.prometheus))
        SHIELD:           ((bosh-deployment.shield))
        RELEASE_NAME:     ((bosh-deployment.release-name))
        VERSION_RELEASE: "MASTER"      
        TYPE_OS:         "ubuntu-trusty"

    - task: test-mariadb
      file: mysql-boshrelease-ci/ci/tasks/tests/test-mariadb.yml
      params:
        ALIAS:            ((bosh-server.alias))
        DEPLOYMENT_NAME : ((bosh-deployment.name))

    - task: test-prometheus
      file: mysql-boshrelease-ci/ci/tasks/tests/test-prometheus.yml
      params:
        ALIAS:            ((bosh-server.alias))
        DEPLOYMENT_NAME : ((bosh-deployment.name))

    - task: remove-mysql-release
      file: mysql-boshrelease-ci/ci/tasks/remove-mysql-release.yml
      params:
        ALIAS:            ((bosh-server.alias))
        DEPLOYMENT_NAME : ((bosh-deployment.name))     

##### job : interpolate-manifest-template-coab
- name: interpolate-manifest-template-coab
  serial: true
  plan:
    - aggregate:
      - get: cf-mysql-release
      - get: cf-mysql-deployment
      - get: mysql-boshrelease-ci   
      - get: git-paas-templates-coab
        params: {submodules: none}
        trigger: true
      - get: version-release-mysql
        trigger: true
        passed: [check-version-mysql]
      - get: bosh-version-ops
        trigger: true
        passed: [check-version-ops] 
    
    - task: create-bosh-config
      file: mysql-boshrelease-ci/ci/tasks/create-bosh-config.yml
      params: 
        CA_CERT:  ((bosh-server.ca))
        IP:       ((bosh-server.ip))
        ALIAS:    ((bosh-server.alias)) 
        USER:     ((bosh-server.user))
        PASSWORD: ((bosh-server.password))     

    - task: interpolate-manifest-paas-templates-coab
      file: mysql-boshrelease-ci/ci/tasks/interpolate-manifest-paas-templates-coab.yml
      params:
        DEPLOYMENT_NAME:       ((template-deployment-coab.name)) 
        NAME_TEMPLATE_RELEASE: ((template-deployment-coab.name-release)) 
        REP_TEMPLATE:          ((template-deployment-coab.rep)) 

##### job : interpolate-manifest-template-ops
- name: interpolate-manifest-template-ops
  serial: true
  plan:
    - aggregate:
      - get: cf-mysql-release
      - get: cf-mysql-deployment
      - get: mysql-boshrelease-ci   
      - get: git-paas-templates-ops
        params: {submodules: none}
        trigger: true
      - get: version-release-mysql
        trigger: true
        passed: [check-version-mysql]
      - get: bosh-version-ops
        trigger: true
        passed: [check-version-ops] 
    
    - task: create-bosh-config
      file: mysql-boshrelease-ci/ci/tasks/create-bosh-config.yml
      params: 
        CA_CERT:  ((bosh-server.ca))
        IP:       ((bosh-server.ip))
        ALIAS:    ((bosh-server.alias)) 
        USER:     ((bosh-server.user))
        PASSWORD: ((bosh-server.password))     

    - task: remove-mysql-release
      file: mysql-boshrelease-ci/ci/tasks/remove-mysql-release.yml
      params:
        ALIAS:            ((bosh-server.alias))
        DEPLOYMENT_NAME:  ((template-deployment-ops.name))   

    - task: interpolate-manifest-paas-templates-ops
      file: mysql-boshrelease-ci/ci/tasks/interpolate-manifest-paas-templates-ops.yml
      params:
        DEPLOYMENT_NAME:       ((template-deployment-ops.name)) 
        NAME_TEMPLATE_RELEASE: ((template-deployment-ops.name-release)) 
        REP_TEMPLATE:          ((template-deployment-ops.rep))         